{
"id": "deletevnet",
"command": "deleteVnet",
"type": "kloudust_cmdline",
"kloudust_cmdline_params": ["vnet_name"],

"title": "{{{i18n.VnetDeleteTitle}}}",

"i18n": {
    "en": {
        "VnetDeleteTitle": "Delete virtual network",
        "VnetDeleteDescription": "Delete a virtual network. A virtual network is comparable to VLANs and includes virtual switching. Complete the required fields and then review + delete to delete a virtual network.",
        "VnetName": "Name",
        "DeleteVnetSubmitLabel": "Delete",
        "FieldValidationErrorGeneric": "Validation error"
    },
    "hi": {
        "VnetDeleteTitle": "Delete virtual network",
        "VnetDeleteDescription": "Delete a virtual network. A virtual network is comparable to VLANs and includes virtual switching. Complete the required fields and then review + delete to delete a virtual network.",
        "VnetName": "Name",
        "DeleteVnetSubmitLabel": "Delete",
        "FieldValidationErrorGeneric": "Validation error"
    },
    "ja": {
        "VnetDeleteTitle": "Delete virtual network",
        "VnetDeleteDescription": "Delete a virtual network. A virtual network is comparable to VLANs and includes virtual switching. Complete the required fields and then review + delete to delete a virtual network.",
        "VnetName": "Name",
        "DeleteVnetSubmitLabel": "Delete",
        "FieldValidationErrorGeneric": "Validation error"
    },
    "zh": {
        "VnetDeleteTitle": "Delete virtual network",
        "VnetDeleteDescription": "Delete a virtual network. A virtual network is comparable to VLANs and includes virtual switching. Complete the required fields and then review + delete to delete a virtual network.",
        "VnetName": "Name",
        "DeleteVnetSubmitLabel": "Delete",
        "FieldValidationErrorGeneric": "Validation error"
    }
},

"form": {
    "description": "{{{i18n.VnetDeleteDescription}}}",

    "required_label": "{{{i18n.Required}}}",
    "required_fields": [
    {"id": "vnet_name", "multioption": true, "type": "select", "label": "{{{i18n.VnetName}}}",  "options":[]}
    ],

    "load_javascript": [
        "const form = arguments[0]||{};",
        "if (!form.required_fields?.length) return;",
        "const vnetResult = await window.monkshu_env.frameworklibs.apimanager.rest(APP_CONSTANTS.API_KLOUDUSTCMD, ",
        "   'POST', {cmd: 'listVnets', project: $$.libsession.get(APP_CONSTANTS.ACTIVE_PROJECT)}, true);",
        "if (vnetResult.result)  { ",
        "   const vnetSelectObject = form.required_fields[0];",
        "   for (const vnet of vnetResult.resources) vnetSelectObject.options.push({value: vnet.raw_name, label: `${vnet.raw_name} - ${vnet.description}`});",
        "}",
        "return form;"
    ],

    "submitlabel": "{{{i18n.DeleteVnetSubmitLabel}}}"
}

}